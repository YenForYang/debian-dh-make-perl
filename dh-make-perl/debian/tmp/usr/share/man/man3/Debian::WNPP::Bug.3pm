.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Debian::WNPP::Bug 3pm"
.TH Debian::WNPP::Bug 3pm "2018-09-14" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Debian::WNPP::Bug \- handy representation of Debian WNPP bug reports
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 9
\&    my $b = Debian::WNPP::Bug\->new(
\&        {   number            => 1234,
\&            title             => \*(AqRFP: nice\-package \-\- do nice things easier\*(Aq,
\&            type              => \*(Aqrfp\*(Aq,
\&            package           => \*(Aqnice\-package\*(Aq,
\&            short_description => \*(Aqdo nice things together\*(Aq,
\&            submitter         => "Joe Developer <joe@developer.local>"
\&        }
\&    );
\&
\&    print "$b";     # 1234
.Ve
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.IP "new" 4
.IX Item "new"
Constructs new instance of the class. Initial values are to be given as a hash
reference.
.SH "FIELDS"
.IX Header "FIELDS"
.IP "number" 4
.IX Item "number"
The unique \s-1ID\s0 of the big in the \s-1BTS.\s0
.IP "title" 4
.IX Item "title"
The title of the bug. Usually something like
.Sp
.Vb 1
\&    RFP: nice\-package \-\- do nice things easier
.Ve
.IP "type" 4
.IX Item "type"
The type of the \s-1WNPP\s0 bug. Either of:
.RS 4
.IP "\s-1RFP\s0" 4
.IX Item "RFP"
request for package
.IP "\s-1ITP\s0" 4
.IX Item "ITP"
intent to package
.IP "O" 4
.IX Item "O"
orphaned package
.IP "\s-1RFH\s0" 4
.IX Item "RFH"
request for help
.IP "\s-1RFA\s0" 4
.IX Item "RFA"
request for adoption
.IP "\s-1ITA\s0" 4
.IX Item "ITA"
intent to adopt
.RE
.RS 4
.RE
.IP "package" 4
.IX Item "package"
Package name
.IP "short_description" 4
.IX Item "short_description"
The short description of the package
.IP "submitter" 4
.IX Item "submitter"
The bug submitter in the form \f(CW\*(C`Full Name <email@address>\*(C'\fR
.SH "OVERLOADS"
.IX Header "OVERLOADS"
.ie n .IP """""" 4
.el .IP "``''" 4
\&\f(CW\*(C`Debian::WNPPBug\*(C'\fR object instances stringify via the method . The
default \f(CW\*(C`as_string\*(C'\fR method returns the bug number.
.SH "METHODS"
.IX Header "METHODS"
.IP "type_and_number" 4
.IX Item "type_and_number"
Returns a string representing the bug type and number in the form \fI\s-1TYPE\s0\fR
#\fInumber\fR, e.g. \f(CW\*(C`ITP #1234\*(C'\fR.
.IP "as_string" 4
.IX Item "as_string"
Used for the "" overload. Returns the bug number.
.SH "AUTHOR"
.IX Header "AUTHOR"
.IP "Damyan Ivanov <dmn@debian.org>" 4
.IX Item "Damyan Ivanov <dmn@debian.org>"
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
.PD 0
.IP "Copyright (C) 2010 Damyan Ivanov <dmn@debian.org>" 4
.IX Item "Copyright (C) 2010 Damyan Ivanov <dmn@debian.org>"
.PD
.PP
This program is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 General Public License version 2 as published by the Free
Software Foundation.
.PP
This program is distributed in the hope that it will be useful, but \s-1WITHOUT ANY
WARRANTY\s0; without even the implied warranty of \s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A
PARTICULAR PURPOSE.\s0  See the \s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 51 Franklin
Street, Fifth Floor, Boston, \s-1MA 02110\-1301 USA.\s0
