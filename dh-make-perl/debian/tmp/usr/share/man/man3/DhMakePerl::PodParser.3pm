.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DhMakePerl::PodParser 3pm"
.TH DhMakePerl::PodParser 3pm "2018-09-14" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
DhMakePerl::PodParser \- internal helper module for DhMakePerl
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
DhMakePerl::PodParser is used by DhMakePerl to extract some
information from the module-to-be-packaged. It sub-classes from
Pod::Parser \- Please refer to it for further documentation.
.SH "METHODS"
.IX Header "METHODS"
.IP "set_names" 4
.IX Item "set_names"
Defines the names of the sections that should be fetched from the \s-1POD\s0
.IP "get" 4
.IX Item "get"
Gets the contents for the specified \s-1POD\s0 section. The single argument should be
one of the values given to \*(L"set_names\*(R".
.IP "cleanup" 4
.IX Item "cleanup"
Empties the information held by the parser object
.IP "command" 4
.IX Item "command"
Overrides base class' Pod::Parser command method.
.Sp
Gets each of the \s-1POD\s0's commands
(sections), and defines how it should react to each of them. In this
particular implementation, it basically filters out anything except
for the \f(CW\*(C`=head\*(C'\fR sections defined in \*(L"set_names\*(R".
.IP "add_text" 4
.IX Item "add_text"
Hands back the text it received as it occurred in the input stream (see the
Pod::Parser's documentation for verbatim,
textblock and
interior_sequence).
.Sp
Content is ignored if more than 15 lines away from the section start.
.IP "verbatim" 4
.IX Item "verbatim"
Called by Pod::Parser for verbatim paragraphs. Redirected to \*(L"add_text\*(R".
.IP "textblock" 4
.IX Item "textblock"
Called by Pod::Parser for ordinary text paragraphs. Redirected to
\&\*(L"add_text\*(R".
.IP "interior_sequence" 4
.IX Item "interior_sequence"
\&\fBinterior_sequence()\fR is called by
Pod::Parser when, eh, an interior sequence occurs in the text. Interior
sequences are things like I<...>.
.Sp
This implementation decodes \f(CW\*(C`gt\*(C'\fR, \f(CW\*(C`lt\*(C'\fR, \f(CW\*(C`sol\*(C'\fR, \f(CW\*(C`verbar\*(C'\fR and numeric
character codes, all used by \f(CW\*(C`E\*(C'\fR escape.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Pod::Parser
.SH "AUTHOR"
.IX Header "AUTHOR"
.IP "Paolo Molaro" 4
.IX Item "Paolo Molaro"
.PD 0
.IP "Documentation added by Gunnar Wolf and Damyan Ivanov" 4
.IX Item "Documentation added by Gunnar Wolf and Damyan Ivanov"
.PD
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
.IP "Copyright (C) 2001, Paolo Molaro <lupus@debian.org>" 4
.IX Item "Copyright (C) 2001, Paolo Molaro <lupus@debian.org>"
.PD 0
.IP "Copyright (C) 2008, Gunnar Wolf <gwolf@debian.org>" 4
.IX Item "Copyright (C) 2008, Gunnar Wolf <gwolf@debian.org>"
.IP "Copyright (C) 2008, Damyan Ivanov <dmn@debian.org>" 4
.IX Item "Copyright (C) 2008, Damyan Ivanov <dmn@debian.org>"
.PD
.PP
This program is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 General Public License version 2 as published by the Free
Software Foundation.
.PP
This program is distributed in the hope that it will be useful, but \s-1WITHOUT ANY
WARRANTY\s0; without even the implied warranty of \s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A
PARTICULAR PURPOSE.\s0  See the \s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 51 Franklin
Street, Fifth Floor, Boston, \s-1MA 02110\-1301 USA.\s0
