.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DhMakePerl::Command::Packaging 3pm"
.TH DhMakePerl::Command::Packaging 3pm "2018-09-14" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
DhMakePerl::Command::Packaging \- common routines for 'make' and 'refresh' dh\-make\-perl commands
.SH "METHODS"
.IX Header "METHODS"
.IP "main_file(file_name)" 4
.IX Item "main_file(file_name)"
Constructs a file name relative to the main source directory, \*(L"main_dir\*(R"
.IP "debian_file(file_name)" 4
.IX Item "debian_file(file_name)"
Constructs a file name relative to the debian/ sub-directory of the main source
directory.
.IP "explained_dependency \fI\f(CI$reason\fI\fR, \fI\f(CI$dependencies\fI\fR, \fI\f(CI@dependencies\fI\fR" 4
.IX Item "explained_dependency $reason, $dependencies, @dependencies"
Adds the list of dependencies to \fI\f(CI$dependencies\fI\fR and shows \fI\f(CI$reason\fI\fR if in
verbose mode.
.Sp
Used to both bump a dependency and tell the user why.
.Sp
\&\fI\f(CI$dependencies\fI\fR is an instance of Debian::Dependencies class, and
\&\fI\f(CI@dependencies\fI\fR is a list of Debian::Dependency instances or strings.
.Sp
The message printed looks like \f(CW\*(C`$reason needs @dependencies\*(C'\fR.
.IP "configure_cpan" 4
.IX Item "configure_cpan"
Configure \s-1CPAN\s0 module. It is safe to call this method more than once, it will
do nothing if \s-1CPAN\s0 is already configured.
.IP "discover_dependencies" 4
.IX Item "discover_dependencies"
Just a wrapper around \f(CW$self\fR\->control\->discover_dependencies which provides the
right parameters to it.
.Sp
Returns a list of missing modules.
.IP "discover_utility_deps" 4
.IX Item "discover_utility_deps"
Determines whether certain versions of \fBdebhelper\fR\|(1) and other packages are
needed by the build process.
.Sp
The following special cases are detected:
.RS 4
.IP "Module::Build::Tiny" 4
.IX Item "Module::Build::Tiny"
if Module::Build::Tiny is present in the build-dependencies, debhelper
dependency is raised to 9.20140227~ in case it was lower before.
.IP "dh \-\-with=quilt" 4
.IX Item "dh --with=quilt"
\&\f(CW\*(C`dh \-\-with=quilt\*(C'\fR needs quilt.
.IP "quilt.make" 4
.IX Item "quilt.make"
If \fI/usr/share/quilt/quilt.make\fR is included in \fIdebian/rules\fR, a
build-dependency on \f(CW\*(C`quilt\*(C'\fR is added.
.IP "dh \-\-with=perl_dbi" 4
.IX Item "dh --with=perl_dbi"
A build dependency on \f(CW\*(C`libdbi\-perl\*(C'\fR is added.
.IP "dh \-\-with=perl_openssl" 4
.IX Item "dh --with=perl_openssl"
A build dependency on \f(CW\*(C`perl\-openssl\-defaults\*(C'\fR is added.
.RE
.RS 4
.RE
.IP "makefile_pl_is_MBC" 4
.IX Item "makefile_pl_is_MBC"
Checks if \fIMakefile.PL\fR is a compatibility wrapper around Build.PL provided by
Module::Build::Compat.
.IP "backup_file(file_name)" 4
.IX Item "backup_file(file_name)"
Creates a backup copy of the specified file by adding \f(CW\*(C`.bak\*(C'\fR to its name. If
the backup already exists, it is overwritten.
.Sp
Does nothing unless the \f(CW\*(C`backups\*(C'\fR option is set.
.IP "unquote(\fIstring\fR)" 4
.IX Item "unquote(string)"
Runs its argument through Text::Balanced's \f(CW\*(C`extract_quotelike\*(C'\fR method and
returns the extracted content with quotes removed. Dies if \f(CW\*(C`extract_quotelike\*(C'\fR
can't find quoted string.
.IP "create_upstream_metadata" 4
.IX Item "create_upstream_metadata"
Populates \fIdebian/upstream/metadata\fR with information from \fI\s-1META\s0\fR.
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
.IP "Copyright (C) 2000, 2001 Paolo Molaro <lupus@debian.org>" 4
.IX Item "Copyright (C) 2000, 2001 Paolo Molaro <lupus@debian.org>"
.PD 0
.IP "Copyright (C) 2002, 2003, 2008 Ivan Kohler <ivan\-debian@420.am>" 4
.IX Item "Copyright (C) 2002, 2003, 2008 Ivan Kohler <ivan-debian@420.am>"
.IP "Copyright (C) 2003, 2004 Marc '\s-1HE\s0' Brockschmidt <he@debian.org>" 4
.IX Item "Copyright (C) 2003, 2004 Marc 'HE' Brockschmidt <he@debian.org>"
.IP "Copyright (C) 2005\-2007 Gunnar Wolf <gwolf@debian.org>" 4
.IX Item "Copyright (C) 2005-2007 Gunnar Wolf <gwolf@debian.org>"
.IP "Copyright (C) 2006 Frank Lichtenheld <djpig@debian.org>" 4
.IX Item "Copyright (C) 2006 Frank Lichtenheld <djpig@debian.org>"
.IP "Copyright (C) 2007\-2018 gregor herrmann <gregoa@debian.org>" 4
.IX Item "Copyright (C) 2007-2018 gregor herrmann <gregoa@debian.org>"
.IP "Copyright (C) 2007\-2013 Damyan Ivanov <dmn@debian.org>" 4
.IX Item "Copyright (C) 2007-2013 Damyan Ivanov <dmn@debian.org>"
.IP "Copyright (C) 2008, Roberto C. Sanchez <roberto@connexer.com>" 4
.IX Item "Copyright (C) 2008, Roberto C. Sanchez <roberto@connexer.com>"
.IP "Copyright (C) 2009\-2011, Salvatore Bonaccorso <carnil@debian.org>" 4
.IX Item "Copyright (C) 2009-2011, Salvatore Bonaccorso <carnil@debian.org>"
.IP "Copyright (C) 2011, Nicholas Bamber <nicholas@periapt.co.uk>" 4
.IX Item "Copyright (C) 2011, Nicholas Bamber <nicholas@periapt.co.uk>"
.IP "Copyright (c) 2016, Nick Morrott <knowledgejunkie@gmail.com>" 4
.IX Item "Copyright (c) 2016, Nick Morrott <knowledgejunkie@gmail.com>"
.IP "Copyright (c) 2017, David Miguel Susano Pinto <carandraug+dev@gmail.com>" 4
.IX Item "Copyright (c) 2017, David Miguel Susano Pinto <carandraug+dev@gmail.com>"
.PD
.PP
This program is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 General Public License version 2 as published by the Free
Software Foundation.
.PP
This program is distributed in the hope that it will be useful, but \s-1WITHOUT ANY
WARRANTY\s0; without even the implied warranty of \s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A
PARTICULAR PURPOSE.\s0  See the \s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 51 Franklin
Street, Fifth Floor, Boston, \s-1MA 02110\-1301 USA.\s0
