.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DH-MAKE-PERL 1p"
.TH DH-MAKE-PERL 1p "2018-09-14" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dh\-make\-perl \- Create debian source packages from Perl modules
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.IP "dh-make-perl [make] {\fI\s-1SOURCE_DIR\s0\fR | \-\-cpan \fI\s-1MODULE\s0\fR|\fI\s-1DIST\s0\fR} \fIoptions...\fR" 4
.IX Item "dh-make-perl [make] {SOURCE_DIR | --cpan MODULE|DIST} options..."
.PD 0
.IP "dh-make-perl refresh {\fI\-\-only ...\fR} [directory]" 4
.IX Item "dh-make-perl refresh {--only ...} [directory]"
.IP "dh-make-perl locate Foo::Bar ..." 4
.IX Item "dh-make-perl locate Foo::Bar ..."
.IP "dh-make-perl refresh-cache" 4
.IX Item "dh-make-perl refresh-cache"
.IP "dh-make-perl dump-config" 4
.IX Item "dh-make-perl dump-config"
.IP "dh-make-perl help" 4
.IX Item "dh-make-perl help"
.IP "cpan2deb \fI\s-1MODULE\s0\fR|\fI\s-1DIST\s0\fR \fIoptions...\fR" 4
.IX Item "cpan2deb MODULE|DIST options..."
.IP "cpan2dsc \fI\s-1MODULE\s0\fR|\fI\s-1DIST\s0\fR \fIoptions...\fR" 4
.IX Item "cpan2dsc MODULE|DIST options..."
.PD
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBdh-make-perl\fR will create the files required to build
a debian source package out of a Perl module or \s-1CPAN\s0 distribution.
This works for most simple packages and is also useful
for getting started with packaging Perl modules.
.PP
You can specify a module or distribution name with the \-\-cpan
switch and \fBdh-make-perl\fR will download it for you from a \s-1CPAN\s0 mirror, or you
can specify the directory with the already unpacked sources. If neither
\&\-\-cpan nor a directory is given as argument, \fBdh-make-perl\fR
tries to create a Perl package from the data in the current directory.
.PP
You can build and install the debian binary package using the
\&\*(L"\-\-build\*(R" and \*(L"\-\-install\*(R" command line switches.
.PP
If \fBdh-make-perl\fR is called as
.PP
.Vb 1
\&    cpan2deb <options...> Foo::Bar
.Ve
.PP
it behaves like
.PP
.Vb 1
\&    dh\-make\-perl make <options...> \-\-build \-\-cpan Foo::Bar
.Ve
.PP
If \fBdh-make-perl\fR is called as
.PP
.Vb 1
\&    cpan2dsc <options...> Foo::Bar
.Ve
.PP
it behaves like
.PP
.Vb 1
\&    dh\-make\-perl make <options...> \-\-build\-source \-\-cpan Foo::Bar
.Ve
.PP
Using this program is no excuse for not reading the
debian developer documentation, including the Debian policy,
the Debian Perl policy, the packaging manual and so on.
.SS "\s-1COMMANDS\s0"
.IX Subsection "COMMANDS"
.IP "make" 4
.IX Item "make"
Default command if no command is given. Creates debianisation from scratch.
Fails with an error if \fIdebian/\fR directory already exists.
.IP "refresh [directory]" 4
.IX Item "refresh [directory]"
For refreshing a package. \f(CW\*(C`directory\*(C'\fR defaults to the current working
directory. Rebuilds \fIdebian/copyright\fR, \fIdebian/rules\fR, \fIdebian/compat\fR
using the current templates. Before any changes are made to these files, a
backup copy is created with a .bak suffix.
.Sp
This is useful when \fIdebian/rules\fR was created using older templates and
doesn't contain much customisations. As always, you're strongly encouraged to
verify if \fIdebian/rules\fR looks sane.
.Sp
\&\f(CW\*(C`refresh\*(C'\fR also tries to update dependency lists in \fIdebian/control\fR from
\&\fI\s-1META\s0.yml\fR.
.Sp
When updating \fIdebian/copyright\fR dh-make-perl tries to be clever about
remembering email addresses. It gets the list of copyright holders and their
emails for \fIdebian/*\fR from the sign off lines in \fIdebian/changelog\fR.
However to allow for email addresses changing, it looks for change lines
of the form
.Sp
.Vb 1
\&      * Email change: Debbie Devlin \-> devlin@debian.org
.Ve
.Sp
So now \f(CW\*(C`Debbie Devlin <devlin@debian.org>\*(C'\fR will be used in the copyright
instead of \f(CW\*(C`Debbie Devlin <debbie@devlin.org>\*(C'\fR.
.IP "\fB\-\-only\fR | \fB\-o\fR \fIcontrol|copyright|docs|examples|rules\fR" 4
.IX Item "--only | -o control|copyright|docs|examples|rules"
This option allows one to update only one or more file(s) in the debian/
directory when \fBdh-make-perl\fR is run in \*(L"refresh\*(R" mode. Filenames are
separated by a comma. The option can be given multiple times, accumulating
arguments.
.IP "locate \fI\s-1MODULE\s0\fR ..." 4
.IX Item "locate MODULE ..."
Tries to locate the package that contains the given Perl \fI\s-1MODULE\s0\fRs.
.Sp
Example:
.Sp
.Vb 1
\&    dh\-make\-perl locate IPC::Run3 XML::Tidy
.Ve
.IP "refresh-cache" 4
.IX Item "refresh-cache"
\&\fBdh-make-perl\fR parses the Contents files, fetched by \fBapt\-file\fR\|(1) and stores
the result in a cache. The cache is refreshed automatically if it is older than
any Contents file. However, if you run \fBapt\-file\fR\|(1) in your nightly cron job,
the first time you run \fBdh-make-perl\fR during the day, you shall wait for the
cache to be reconstructed. With this option, you can move the cache re-creation
to the cron job, right after \f(CW\*(C`apt\-file update\*(C'\fR.
.Sp
Does nothing if the cache is newer that the Contents files.
.IP "dump-config" 4
.IX Item "dump-config"
Causes the current config, including any default settings to be printed to the
standard output.
.Sp
Useful for populating dh\-make\-perl.conf file.
.IP "help" 4
.IX Item "help"
Displays short usage information.
.SS "\s-1OPTIONS\s0"
.IX Subsection "OPTIONS"
.IP "\fB\-\-arch\fR \fIany\fR | \fIall\fR" 4
.IX Item "--arch any | all"
This switches between arch-dependent and arch-independent packages. If \fB\-\-arch\fR
isn't used, \fBdh-make-perl\fR uses a relatively good-working algorithms to
decide this alone.
.IP "\fB\-\-backups\fR | \fB\-\-no\-backups\fR" 4
.IX Item "--backups | --no-backups"
In \*(L"refresh\*(R" mode, create backups of \fIdebian/copyright\fR and
\&\fIdebian/rules\fR before overwritting them. On by default.
.IP "\fB\-\-basepkgs\fR" 4
.IX Item "--basepkgs"
Explicitly gives a comma-separated list of packages to consider \*(L"base\*(R"
packages (i.e. packages that should always be available in Debian
systems). This option defaults to \f(CW\*(C`perl,perl\-base\*(C'\fR \- it
is used to check for module dependencies. If a needed module is in the
\&\f(CW\*(C`basepkgs\*(C'\fR, it won't be mentioned in the \f(CW\*(C`depends:\*(C'\fR field of
\&\f(CW\*(C`debian/control\*(C'\fR.
.Sp
If this option is specified, the above mentioned default packages will
not be included (but will be mentioned as explicit dependencies in the
resulting package). You can, of course, mention your own modules
and explicitly specify the default values.
.Sp
Note that this option should be used sparsingly and with care, as it
might lead to packages not being rebuildable because of unfulfilled
dependencies.
.IP "\fB\-\-bdepends\fR \fIBUILD-DEPENDS\fR" 4
.IX Item "--bdepends BUILD-DEPENDS"
Manually specify a string to be \fBaddedd\fR to the module's build-dependencies
(that is, the packages and their versions that have to be installed in order to
successfully build the package). Keep in mind that packages generated by
\&\fBdh-make-perl\fR require debhelper to be specified as a build dependency. Same note
as for \-\-depends applies here \- use only when needed.
.IP "\fB\-\-bdependsi\fR \fIBUILD-DEPENDS-INDEP\fR" 4
.IX Item "--bdependsi BUILD-DEPENDS-INDEP"
Manually specify a string to be \fBaddedd\fR to the module's build-dependencies
for architecture-independent builds. Same notes as those for the \-\-depends
and \-\-bdepends options apply here.
.IP "\fB\-\-build\fR" 4
.IX Item "--build"
Builds the binary package (i.e. the .deb file) after setting the
package directory up.
.Sp
\&\s-1NB:\s0 This builds only a binary package (by calling \*(L"fakeroot debian/rules
binary\*(R") and does not sign the package. It is meant for a quick local
install of a package, not for creating a package ready for submission to the
Debian archive.
.IP "\fB\-\-build\-source\fR" 4
.IX Item "--build-source"
Builds the source package (i.e. the .dsc and .debian.tar.gz files)
after setting the package directory up.
.Sp
\&\s-1NB:\s0 This builds only a source package (by calling \*(L"dpkg-source \-b\*(R")
and does not sign the package. It is meant for a quick local install
of a source package to be thrown into e.g. a pbuilder, not for
creating a source package ready for submission to the Debian archive.
.IP "\fB\-\-closes\fR \fI\s-1ITPBUG\s0\fR" 4
.IX Item "--closes ITPBUG"
Manually specify the \s-1ITP\s0 bug number that this package closes. If not
given, \fBdh-make-perl\fR will try to connect to bugs.debian.org to fetch the
appropriate bug number, using WWW::Mechanize.
.IP "\fB\-\-core\-ok\fR" 4
.IX Item "--core-ok"
Allows building core Perl modules. By default, \fBdh-make-perl\fR will not allow
building a module that is shipped as part of the standard Perl library; by
specifying this option, \fBdh-make-perl\fR will build them anyway.
.Sp
Note that, although it is not probable, this might break unrelated items in
your system \- if a newer version of a core module breaks the \s-1API,\s0 all kinds
of daemons might get upset ;\-)
.IP "\fB\-\-cpan\fR \fI\s-1MODULE\s0\fR|\fI\s-1DIST\s0\fR" 4
.IX Item "--cpan MODULE|DIST"
Instructs \fBdh-make-perl\fR to fetch and extract the given \s-1CPAN\s0 module or
distribution. Works both with \f(CW\*(C`Foo::Bar\*(C'\fR and \f(CW\*(C`Foo\-Bar\*(C'\fR.
.IP "\fB\-\-cpan\-mirror\fR \fI\s-1MIRROR\s0\fR" 4
.IX Item "--cpan-mirror MIRROR"
Specifies a \s-1CPAN\s0 site to use as mirror.
.IP "\fB\-\-data\-dir\fR \fI\s-1DIRECTORY\s0\fR" 4
.IX Item "--data-dir DIRECTORY"
Use another data directory, instead of the default, \f(CW\*(C`/usr/share/dh\-make\-perl\*(C'\fR
.Sp
Data directory is were \fBdh-make-perl\fR looks for its default rules.* templates.
It is similar to \fB\-\-home\-dir\fR, but does not change the location of the \s-1APT\s0
Contents cache file. If both are given, \fB\-\-home\-dir\fR takes precedence.
.IP "\fB\-\-depends\fR \fI\s-1DEPENDS\s0\fR" 4
.IX Item "--depends DEPENDS"
Manually specify a string to be \fBaddedd\fR to the module's dependencies. This
should be used when building modules where \fBdh-make-perl\fR cannot guess the Perl
dependencies (such as modules built using Module::Install), or when the
Perl code depends on non-Perl binaries or libraries. Usually, \fBdh-make-perl\fR
will figure out the dependencies by itself. If you need to pass \fBdh-make-perl\fR
dependency information, you must do it using the debian package format. i.e.
.Sp
.Vb 1
\&    dh\-make\-perl \-\-depends libtest\-more\-perl
.Ve
.IP "\fB\-\-desc\fR \fI\s-1SHORT DESCRIPTION\s0\fR" 4
.IX Item "--desc SHORT DESCRIPTION"
Uses the argument to \-\-desc as short description for the package.
.IP "\fB\-\-dh\fR \fI\s-1VERSION\s0\fR" 4
.IX Item "--dh VERSION"
Set desired debhelper compatibility level. The default is 11.
.Sp
Since version 0.77, \fBdh-make-perl\fR only supports debhelper compatibility
levels \fB>=8\fR.
.Sp
See \fBdebhelper\fR\|(1).
.IP "\fB\-\-dist\fR \fI\s-1DISTRIBUTION\s0\fR" 4
.IX Item "--dist DISTRIBUTION"
Limit the distributions whose \f(CW\*(C`Contents\*(C'\fR files are parsed. The argument is a distribution name.
.Sp
Default: empty, meaning no filtering.
.Sp
Example:
    dh-make-perl \-\-dist etch
.IP "\fB\-\-email\fR | \fB\-e\fR \fI\s-1EMAIL\s0\fR" 4
.IX Item "--email | -e EMAIL"
Manually specify the Maintainer email address to use in debian/control and
in debian/changelog.
.IP "\fB\-\-exclude\fR | \fB\-i\fR [\fI\s-1REGEX\s0\fR]" 4
.IX Item "--exclude | -i [REGEX]"
This allows you to specify a \s-1PCRE\s0 to exclude some files from the search for
docs and stuff like that. If no argument is given (but the switch is specified
\&\- not specifying the switch will include everything), it defaults to
dpkg-source's default values.
.IP "\fB\-\-install\fR" 4
.IX Item "--install"
Installs the freshly built package. Specifying \-\-install implies \-\-build \- The
package will not be installed unless it was built (obviously ;\-) )
.IP "\fB\-\-install\-deps\fR" 4
.IX Item "--install-deps"
Install all dependencies for the module, as long as those dependencies are
available as Debian packages.
.IP "\fB\-\-install\-build\-deps\fR" 4
.IX Item "--install-build-deps"
Install dependencies required for building the module, as long as those dependencies
are available as Debian packages.
.IP "\fB\-\-intrusive\fR" 4
.IX Item "--intrusive"
When determining module dependencies, if Module::Depends fails, tries again
with Module::Depends::Intrusive. M:D:I loads all .pm files, intercepting
loading of other modules, effectively running untrusted code on your behalf.
Use with caution.
.IP "\fB\-\-network\fR" 4
.IX Item "--network"
Enables querying of Debian \s-1WNPP\s0 lists for \s-1ITP\s0 and similar bugs. Enabled by
default, use \f(CW\*(C`\-\-no\-network\*(C'\fR to disable.
.IP "\fB\-\-notest\fR" 4
.IX Item "--notest"
This option for not running the automatic testing of the module as part of
the build script has been removed in 0.54. Please put nocheck in the
\&\s-1DEB_BUILD_OPTIONS\s0 environment variable if you want to skip the tests when
building a package.
.IP "\fB\-\-home\-dir\fR \fI\s-1DIRECTORY\s0\fR" 4
.IX Item "--home-dir DIRECTORY"
Where \s-1APT\s0 Contents and other caches are stored.
.Sp
Default: ~/.dh\-make\-perl
.IP "\fB\-\-packagename\fR | \fB\-p\fR \fI\s-1PACKAGENAME\s0\fR" 4
.IX Item "--packagename | -p PACKAGENAME"
Manually specify the Package Name, useful when the module has dashes in its
name.
.IP "\fB\-\-pkg\-perl\fR" 4
.IX Item "--pkg-perl"
Useful when preparing a package for the Debian Perl Group
<https://perl\-team.pages.debian.net/>.
.Sp
Sets \f(CW\*(C`Maintainer\*(C'\fR, \f(CW\*(C`Uploaders\*(C'\fR, \f(CW\*(C`Vcs\-Git\*(C'\fR and \f(CW\*(C`Vcs\-Browser\*(C'\fR fields in
\&\fIdebian/control\fR accordingly. Also, when \f(CW\*(C`\-\-vcs git\*(C'\fR is used (the default),
sets up a Git remote pointing to the right place on \fIsalsa.debian.org\fR.
.IP "\fB\-\-recursive\fR" 4
.IX Item "--recursive"
Valid only in \*(L"make\*(R" mode with \*(L"\-\-cpan\*(R" or \fIdirectory\fR arguments. Causes
dh-make-perl to try to create packaging (and possibly build and install the
packages if \*(L"\-\-build\*(R" and \*(L"\-\-install\*(R" options are also given) for any
dependencies which are missing packages.
.Sp
This works like this: when the 'main' package is constructed, any missing
packages are put in a list, and then the debianisation procedure is run in turn
on each of them, recursively.
.IP "\fB\-\-requiredeps\fR" 4
.IX Item "--requiredeps"
Fail if a dependency Perl package was not found.
.IP "\fB\-\-revision\fR \fI\s-1REVISION\s0\fR" 4
.IX Item "--revision REVISION"
Specifies the debian revision of the resulting package.
.Sp
Useful when you want to let dh-make-perl discover the ustream version, but
still enforce a specific debian revision, e.g. when backporting.
.Sp
Overridden by \-\-version.
.IP "\fB\-\-source\-format\fR \fIformat\fR" 4
.IX Item "--source-format format"
When creating or refreshing packaging, use the specified source format.
Defaults to \f(CW\*(C`3.0 (quilt)\*(C'\fR.
.IP "\fB\-\-vcs\fR \fI\s-1VCS\s0\fR" 4
.IX Item "--vcs VCS"
In \fB\-\-pkg\-perl\fR mode, use the specified version control system in the
generated \fIVcs\-*\fR fields. The default is \f(CW\*(C`git\*(C'\fR.
.Sp
If \fI\s-1VCS\s0\fR is \f(CW\*(C`git\*(C'\fR, \f(CW\*(C`dh\-make\-perl\*(C'\fR will setup a Git repository with three
branches:
.RS 4
.IP "upstream" 4
.IX Item "upstream"
The initial branch containing upstream sources
.IP "master" 4
.IX Item "master"
The branch where packaging is done, forked off \f(CW\*(C`upstream\*(C'\fR and with the
contents of the \f(CW\*(C`debian/\*(C'\fR directory added.
.IP "pristine-tar" 4
.IX Item "pristine-tar"
A branch to keep \fBpristine\-tar\fR\|(1) data.
.RE
.RS 4
.Sp
If \fB\-\-pkg\-perl\fR is also given, an \f(CW\*(C`origin\*(C'\fR remote is added pointing to the
repository on \fIsalsa.debian.org\fR.
.RE
.IP "\fB\-\-verbose\fR | \fB\-\-no\-verbose\fR" 4
.IX Item "--verbose | --no-verbose"
Print additional information while processing.
.Sp
\&\-\-verbose is on by default in \*(L"make\*(R" mode, off otherwise.
.IP "\fB\-\-version\fR \fI\s-1VERSION\s0\fR" 4
.IX Item "--version VERSION"
Specifies the version of the resulting package.
Usually calculated correctly but \fB\-\-version\fR can override wrong guesses.
.Sp
\&\fINote\fR that this is not the upstream version. For a non-native package you
need to include the Debian revision here, e.g. for a new package of
upstream's x.y release this would be \fBx.y\-1\fR.
.SS "\s-1DEPENDENCY RESOLUTION\s0"
.IX Subsection "DEPENDENCY RESOLUTION"
For mapping upstream build, test, and runtime requirements to build and
runtime dependencies on Debian packages, \fBdh-make-perl\fR can use \s-1APT\s0's
\&\fIContents\fR files, if \fBapt\-file\fR\|(1) is installed, and additionally
\&\fI/var/lib/dpkg/available\fR, if \f(CW\*(C`libdpkg\-parse\-perl\*(C'\fR is installed.
.SH "FILES"
.IX Header "FILES"
The following directories will be searched to find additional files
required by \fBdh-make-perl\fR:
.PP
.Vb 2
\&        /usr/share/dh\-make\-perl/
\&        $HOME/.dh\-make\-perl/
.Ve
.IP "\(bu" 4
dh\-make\-perl.conf
.Sp
User configuration. The file is in \s-1YAML\s0 format. The keys are option names,
as documented in \*(L"\s-1OPTIONS\*(R"\s0 (without leading \fI\-\-\fR).
.Sp
See the output of \f(CW\*(C`dh\-make\-perl \-\-dump\-config\*(C'\fR, which can also be used for
population of \fIdh\-make\-perl.conf\fR.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
\&\s-1HOME\s0 \- get user's home directory
.PP
\&\s-1DEBFULLNAME\s0 \- get the real name of the maintainer
.PP
\&\s-1LOGNAME\s0 or \s-1USER\s0 \- get the username
.PP
\&\s-1DEBEMAIL\s0 or \s-1EMAIL\s0 \- get the email address of the user
.SH "BUGS"
.IX Header "BUGS"
Several, let me know when you find them.
.SH "AUTHOR"
.IX Header "AUTHOR"
Paolo Molaro <lupus@debian.org> (\s-1MIA\s0)
.PP
Maintained for a time by Ivan Kohler <ivan\-debian@420.am>.
.PP
Maintained for a time by Marc Brockschmdit <marc@dch\-faq.de>.
.PP
Maintained for a time by Gunnar Wolf <gwolf@gwolf.org>.
.PP
Now team-maintained by the Debian Perl Group, https://salsa.debian.org/perl\-team/modules/packages/dh\-make\-perl
.PP
Patches from:
.IP "Adam Sjoegren <asjo@koldfront.dk>" 4
.IX Item "Adam Sjoegren <asjo@koldfront.dk>"
.PD 0
.IP "Adrian Phillips <adrianp@powertech.no>" 4
.IX Item "Adrian Phillips <adrianp@powertech.no>"
.IP "Amos Shapira <amos.shapira@gmail.com>" 4
.IX Item "Amos Shapira <amos.shapira@gmail.com>"
.IP "Ansgar Burchardt <ansgar@debian.org>" 4
.IX Item "Ansgar Burchardt <ansgar@debian.org>"
.IP "Axel Beckert <abe@debian.org>" 4
.IX Item "Axel Beckert <abe@debian.org>"
.IP "Carne\*: Draug <carandraug+dev@gmail.com>" 4
.IX Item "Carne: Draug <carandraug+dev@gmail.com>"
.IP "Christian Kurz <shorty@debian.org>" 4
.IX Item "Christian Kurz <shorty@debian.org>"
.IP "Christopher Hoskin <mans0954@debian.org>" 4
.IX Item "Christopher Hoskin <mans0954@debian.org>"
.IP "Damyan Ivanov <divanov@creditreform.bg>" 4
.IX Item "Damyan Ivanov <divanov@creditreform.bg>"
.IP "David Paleino <d.paleino@gmail.com>" 4
.IX Item "David Paleino <d.paleino@gmail.com>"
.IP "David Pashley <david@davidpashley.com>" 4
.IX Item "David Pashley <david@davidpashley.com>"
.IP "Dima Kogan <dima@secretsauce.net>" 4
.IX Item "Dima Kogan <dima@secretsauce.net>"
.IP "Edward Betts <edward@debian.org>" 4
.IX Item "Edward Betts <edward@debian.org>"
.IP "Fermin Galan <galan@dit.upm.es>" 4
.IX Item "Fermin Galan <galan@dit.upm.es>"
.IP "Geoff Richards <qef@ungwe.org>" 4
.IX Item "Geoff Richards <qef@ungwe.org>"
.IP "Gergely Nagy <algernon@bonehunter.rulez.org>" 4
.IX Item "Gergely Nagy <algernon@bonehunter.rulez.org>"
.IP "gregor herrmann <gregoa@debian.org>" 4
.IX Item "gregor herrmann <gregoa@debian.org>"
.IP "Hilko Bengen <bengen@debian.org>" 4
.IX Item "Hilko Bengen <bengen@debian.org>"
.IP "Kees Cook <keex@outflux.net>" 4
.IX Item "Kees Cook <keex@outflux.net>"
.IP "Jesper Krogh <jesper@krogh.cc>" 4
.IX Item "Jesper Krogh <jesper@krogh.cc>"
.IP "Johnny Morano <jmorano@moretrix.com>" 4
.IX Item "Johnny Morano <jmorano@moretrix.com>"
.IP "Juerd <juerd@ouranos.juerd.net>" 4
.IX Item "Juerd <juerd@ouranos.juerd.net>"
.IP "Marc Chantreux (mail withheld)" 4
.IX Item "Marc Chantreux (mail withheld)"
.IP "Matt Hope <dopey@debian.org>" 4
.IX Item "Matt Hope <dopey@debian.org>"
.IP "Matthew Gabeler-Lee <cheetah@fastcat.org>" 4
.IX Item "Matthew Gabeler-Lee <cheetah@fastcat.org>"
.IP "Maximilian Gass <mxey@cloudconnected.org>" 4
.IX Item "Maximilian Gass <mxey@cloudconnected.org>"
.IP "Noel Maddy <noel@zhtwn.com>" 4
.IX Item "Noel Maddy <noel@zhtwn.com>"
.IP "Oleg Gashev <oleg@gashev.net>" 4
.IX Item "Oleg Gashev <oleg@gashev.net>"
.IP "Oliver Gorwits <oliver.gorwits@oucs.ox.ac.uk>" 4
.IX Item "Oliver Gorwits <oliver.gorwits@oucs.ox.ac.uk>"
.IP "Paul Fenwick <pjf@perltraining.com.au>" 4
.IX Item "Paul Fenwick <pjf@perltraining.com.au>"
.IP "Peter Flanigan <Support@RoxSoft.co.uk>" 4
.IX Item "Peter Flanigan <Support@RoxSoft.co.uk>"
.IP "Peter Moerch <mn3k66i02@sneakemail.com>" 4
.IX Item "Peter Moerch <mn3k66i02@sneakemail.com>"
.IP "Peter Pentchev <roam@ringlet.net>" 4
.IX Item "Peter Pentchev <roam@ringlet.net>"
.IP "Ryan Niebur <ryanryan52@gmail.com>" 4
.IX Item "Ryan Niebur <ryanryan52@gmail.com>"
.IP "Salvatore Bonaccorso <carnil@debian.org>" 4
.IX Item "Salvatore Bonaccorso <carnil@debian.org>"
.IP "Stephen Oberholtzer <oliverklozoff@gmail.com>" 4
.IX Item "Stephen Oberholtzer <oliverklozoff@gmail.com>"
.IP "Tim Retout <diocles@debian.org>" 4
.IX Item "Tim Retout <diocles@debian.org>"
.IP "Ton Nijkes <tonn@wau.mis.ah.nl>" 4
.IX Item "Ton Nijkes <tonn@wau.mis.ah.nl>"
.PD
.PP
\&... And others who, sadly, we have forgot to add :\-/
